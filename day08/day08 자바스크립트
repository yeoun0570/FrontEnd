08월 30일 예정

1. 자바스크립트의 동작원리
    a. 실행컨텍스트
        i. 스코프를 기반으로 식별자
        ii. 식별자에 바인딩 값의 관리방법
        iii. 호이스팅이 발생하는 이유
        iv. 클로저 동작방식

2. 동기처리 프로그래밍 방식 vs 비동기 처리 프로그래밍 방식
    a. 동기처리와 비동기처리
    b. 이벤트 루프와 태스크(task) 큐

3. Ajax
    a. JSON
    b. xmlHttpRequest 객체(프로퍼티와 메서드) 
        i. HTTP 요청 전송
        ii. HTTP 응답 처리

======================================================================
09월 03일 예정

4. REST API

5. 프로미스, 제너레이터, 에러처리

======================================================================

1. 자바스크립트의 동작원리
    a. 동작 순서
        i. 소스코드 작성 
        ii. 코드 평가 : 코드를 실행하기 위한 준비
            1. 실행컨텍스트 생성
            2. 변수, 함수 선언문만 먼저 실행하여 생성된 변수나 함수식별자를 키로 관리
            3. 스코프에 등록
        iii. 선언문을 제외한 소스코드가 순차적으로 실행 (런타임 실행)

    a. 실행컨텍스트
        i. 코드나 기능 등이 메모리에 올라가서 실행되는 공간을 뜻한다.
            1. 각 코드영역마다 실행컨텍스트를 4가지 생성한다.
            2. var 키워드로 선언된 전역변수와 함수 선언문으로 선언된 전역함수를 전역객체의 프로퍼티와 메서드로 바인딩하려면 참조를 위해 전역 객체와 연결한다.
            3. 연결된 후 코드평가가 실행되고 통과하면 컨텍스트가 생성된다.
        ii. 전역코드 (global code)
            1. 최상위 스코프이다.
        iii. 함수코드 (function code)
        iv. eval 코드(빌트 인 전역함수)
            1. eval 함수에 인수로 전달되어 실행되는 코드
        v. 모듈코드(module code)
            1. 함수, 클래스를 제외하고 나머지 코드

2. 동기처리와 비동기 처리
    a. 함수를 호출하면 함수코드가 평가되어서 함수 실행컨텍스트가 생성된다.
    b. 생성된 함수 컨텍스트는 실행컨텍스트에 push 되고 pop되면서 코드가 실행된다.
    c. 함수의 실행순서는 실행컨텍스트 스택으로 관리한다.
    d. 자바스크립트 엔진은 단 하나의 실행컨텍스트 스택을 갖는다.
        i. 실행할 수 있는 영역이 하나이기 때문에 동시에 2개 이상의 함수는 실행될 수 없다는 의미
        ii. 실행 중이 아닌 나머지 컨텍스트는 대기 task안에서 실행대기를 한다.
        iii. 자바스크립트 엔진은 한번에 하나의 태스크만 실행할 수 있다. ==> 싱글 스레드 방식
    e. 브라우저가 동작하는 방식은 여러가지 태스크가 동시에 처리되는 것처럼 보인다.
        i. 자바스크립트의 동시성을 지원하기 때문이다.
        ii. 동시성 지원은 이벤트 루프(event loop)가 지원해준다.
        iii. event loop는 브라우저에 built in 되어있다.

3. Ajax
    a. 자바스크립트를 사용해서 브라우저가 서버에게 비동기 방식으로 데이터를 요청하고 서버가 응답한 데이터를 수신하여 웹페이지에 동적으로 랜더링 하는 프로그래밍 방식
        i. 브라우저에서 제공하는 Web API인 xmlHttpRequest 객체를 기반으로 동작
        ii. xmlHttpRequest 객체는 HTTP 비동기 통신을 위한 메서드와 프로퍼티(속성)을 제공한다.
        iii. 변경할 부분만 갱신한다.
        iv. 변경할 필요가 없는 부분은 다시 렌더링 하지 않는다.
        v. 클라이언트와 서버와 비동기 동작을 통신을 하기 때문에 서버에 요청을 보낸 이후 다른 태스크에 블로킹이 발생하지 않는다.
    b. JSON
        i. xmlHttpRequest 자바스크립트가 사용하는 HTTP 요청 객체 -> Web API 제공